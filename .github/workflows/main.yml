name: A workflow for ensuring credentials are not in file
on: 
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]
jobs:
  run_owasp:
    name: Run Owasp through sh file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: OWASP-Dependency-Check
        uses: ./dependency-check/bin/dependency-check.sh --project ./react-buggy --scan ../../react-buggy --out ModuleVulnerabilities
  # check_secrets:
  #   name: Credentials Checker
  #   runs-on: ubuntu-latest
  #   steps:        
  #     - uses: actions/checkout@master
  #     - name: trufflehog-actions-scan
  #       uses: sadiaashfaq2812/trufflehog-actions-scan@master
  #       with:
  #         branch: ${{ github.head_ref }}
  #         # using scanArguments with entropy=true to consider regexes rules for credentials evaluations
  #         # scanArguments: "--regex --entropy=True --max_depth=20  --rules /regexes.json"
  #         # using scanArguments with entropy=false to discard regexes rules for credentials evaluations
  #         scanArguments: "--regex --entropy=False --max_depth=20  --rules /regexes.json"
  # check_dependency:   
  #   name: Check Modules Dependency
  #   runs-on: ubuntu-latest
  #   steps:        
  #     - name: Opinionated OWASP Dependency-Check
  #       uses: Djelibeybi/opinionated-dependency-check@v1
  # sonarqube_scan:
  #   name: SonarQube Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: SonarQube Scan
  #       uses: kitabisa/sonarqube-action@master
  #       with:
  #         host: ${{ secrets.SONARQUBE_HOST }}
  #         login: ${{ secrets.SONARQUBE_TOKEN }}
  njsscan:
    runs-on: ubuntu-latest
    name: njsscan check
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: sadiaashfaq2812/njsscan@master
      with:
        args: '--sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the react js application
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.3.0
        with:
          target: 'https://www.zaproxy.org/'
    # Steps for advance scan
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #     with:
    #       ref: master
    #   - name: ZAP Scan
    #     uses: zaproxy/action-full-scan@v0.2.0
    #     with:
    #       token: ${{ secrets.GITHUB_TOKEN }}
    #       docker_name: 'owasp/zap2docker-stable'
    #       target: 'https://www.zaproxy.org/'
    #       rules_file_name: '.zap/rules.tsv'
    #       cmd_options: '-z "-configFile /zap/wrk/options.prop"'

