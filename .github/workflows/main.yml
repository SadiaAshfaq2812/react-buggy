name: A workflow for ensuring credentials are not in file
on: 
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]
jobs:
  gitleaks:
    name: 'Git leaks to scan code and highlight keys'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: gitleaks-action
      uses: zricethezav/gitleaks-action@master

  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  # dependency_check:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Run script file
  #     run: |
  #       chmod +x ./dependency-check-script.bash
  #       ./dependency-check-script.bash
  #     shell: bash
  # sonar_qube:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: SonarQube Scan
  #       uses: kitabisa/sonarqube-action@v1.1.0

  # dependencycheck:
  #   stage: security
  #   variables:
  #     SCAN_TYPE: scan_type="Dependency Check" 
  #     REPORT: gl-dependency-check-report.xml
  #   image:
  #       name: owasp/dependency-check
  #       entrypoint: [""] 
  #   script:
  #       - /usr/share/dependency-check/bin/dependency-check.sh -v
  #         --format XML 
  #         --enableExperimental 
  #         --suppression=$CI_PROJECT_DIR/dependency_check_suppressions.xml
  #         --scan=$CI_PROJECT_DIR
  #         --out=$REPORT
  #   artifacts:
  #     paths:
  #       - $REPORT         
  #   after_script:
  #     - apk add --no-cache curl
  #     - curl -v -X POST "${DOJO_URL}" 
  #       --header "${DOJO_AUTH}" 
  #       --header "${DOJO_CONTENT}" 
  #       --form "${ENGAGEMENT}" 
  #       --form 'verified="true"' 
  #       --form 'active="true"' 
  #       --form 'lead="1"' 
  #       --form 'tags="gitlab"' 
  #       --form "${SCAN_TYPE}" 
  #       --form 'minimum_severity="Info"' 
  #       --form 'skip_duplicates="true"' 
  #       --form 'close_old_findings="false"' 
  #       --form 'file=@"gl-dependency-check-report.xml"'  

  # run_owasp:
  #   name: Run Owasp through sh file
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: OWASP-Dependency-Check
  #       uses: ./dependency-check/bin/dependency-check.sh --project ./react-buggy --scan ../../react-buggy --out ModuleVulnerabilities
  # check_secrets:
  #   name: Credentials Checker
  #   runs-on: ubuntu-latest
  #   steps:        
  #     - uses: actions/checkout@master
  #     - name: trufflehog-actions-scan
  #       uses: sadiaashfaq2812/trufflehog-actions-scan@master
  #       with:
  #         branch: ${{ github.head_ref }}
  #         # using scanArguments with entropy=true to consider regexes rules for credentials evaluations
  #         # scanArguments: "--regex --entropy=True --max_depth=20  --rules /regexes.json"
  #         # using scanArguments with entropy=false to discard regexes rules for credentials evaluations
  #         scanArguments: "--regex --entropy=False --max_depth=20  --rules /regexes.json"
  # check_dependency:   
  #   name: Check Modules Dependency
  #   runs-on: ubuntu-latest
  #   steps:        
  #     - name: Opinionated OWASP Dependency-Check
  #       uses: Djelibeybi/opinionated-dependency-check@v1
  # sonarqube_scan:
  #   name: SonarQube Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: SonarQube Scan
  #       uses: kitabisa/sonarqube-action@master
  #       with:
  #         host: ${{ secrets.SONARQUBE_HOST }}
  #         login: ${{ secrets.SONARQUBE_TOKEN }}
  njsscan:
    runs-on: ubuntu-latest
    name: njsscan check
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: sadiaashfaq2812/njsscan@master
      with:
        args: '--sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

  # zap_scan:
  #   runs-on: ubuntu-latest
  #   name: Scan the react js application
  #   steps:
  #     - name: ZAP Scan
  #       uses: zaproxy/action-baseline@v0.3.0
  #       with:
  #         target: 'https://www.zaproxy.org/'
    # Steps for advance scan
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #     with:
    #       ref: master
    #   - name: ZAP Scan
    #     uses: zaproxy/action-full-scan@v0.2.0
    #     with:
    #       token: ${{ secrets.GITHUB_TOKEN }}
    #       docker_name: 'owasp/zap2docker-stable'
    #       target: 'https://www.zaproxy.org/'
    #       rules_file_name: '.zap/rules.tsv'
    #       cmd_options: '-z "-configFile /zap/wrk/options.prop"'

